---
# This playbook defines tasks to deploy the application stack

- name: Install PostgreSQL database
  hosts: all
  remote_user: root
  tasks:
    - name: Install postgresql package
      apt:
        name: postgresql
    - name: Create Airbods DB user
      user:
        name: airbods
    - name: Install psycopg2
      pip:
        name:
          - psycopg2-binary
    - name: Install PostgreSQL auth config
      copy:
        src: pg_hba.conf
        dest: /etc/postgresql/12/main/pg_hba.conf
    - name: Create postgres user
      user:
        name: postgres
        password: "{{ lookup('file', '/run/secrets/postgres') | password_hash('sha512') }}"
    - name: Install PostgreSQL configuration
      copy:
        src: postgresql.conf
        dest: /etc/postgresql/12/main/postgresql.conf
    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: restarted

- name: Install Redis database
  hosts: all
  remote_user: root
  tasks:
    - name: Install Redis package
      apt:
        name: redis
    - name: Ensure Redis is running
      service:
        name: redis
        state: restarted

# https://airflow.apache.org/docs/apache-airflow/stable/installation.html
- name: Install Apache Airflow
  hosts: all
  remote_user: root
  tasks:
    - name: Create airflow system user
      user:
        name: airflow
        password: "{{ lookup('file', '/run/secrets/airflow') | password_hash('sha512') }}"
        system: yes
    - name: Create Airflow group
      group:
        name: airflow
    - name: Install Airflow prerequisites
      apt:
        name:
          - freetds-bin
          - krb5-user
          - ldap-utils
          - libsasl2-2
          - libsasl2-modules
          - libssl1.1
          - locales
          - lsb-release
          - sasl2-bin
          - sqlite3
          - unixodbc
          - python3-pip
    - name: Install virtualenv
      pip:
        name: virtualenv
    - name: Install Airflow packages
      pip:
        name:
          - apache-airflow[celery]==2.1.*
          - apache-airflow-providers-postgres==1.0.*
          - apache-airflow-providers-google==3.0.*
          - apache-airflow-providers-http==2.0.*
        virtualenv: /opt/airflow
    - name: Install systemd services
      template:
        src: /etc/ansible/airflow.service.j2
        dest: "/etc/systemd/system/airflow-{{ item }}.service"
      loop: "{{ service }}"
    - name: Install Airflow configuration
      copy:
        src: airflow.cfg
        dest: /home/airflow/airflow/airflow.cfg
        owner: airflow
    - name: Secure secrets dir
      file:
        path: "{{ secrets_dir }}"
        state: directory
        mode: '0500'
        owner: airflow
        group: airflow
    - name: Install connection string
      copy:
        src: /run/secrets/sql_alchemy_conn_localhost
        dest: "{{ secrets_dir }}/sql_alchemy_conn_localhost.txt"
        owner: airflow
        group: airflow
        mode: '0400'
    - name: Install Airflow connections
      copy:
        src: /run/secrets/connections
        dest: "{{ secrets_dir }}/connections.json"
        owner: airflow
        group: airflow
        mode: '0400'
    - name: Install Airflow variables
      copy:
        src: /run/secrets/variables
        dest: "{{ secrets_dir }}/variables.json"
        owner: airflow
        group: airflow
        mode: '0400'
    - name: Create airflow database user
      become: true
      become_user: postgres
      community.postgresql.postgresql_user:
        user: airflow
        password: "{{ lookup('file', '/run/secrets/airflow') }}"
    - name: Create airflow database
      become: true
      become_user: postgres
      community.postgresql.postgresql_db:
        name: airflow
        owner: airflow
    - name: Initialise Airflow database
      remote_user: airflow
      # "initdb is also idempotent, so this can be run as often as you
      # choose to, without needing to worry about the database changing."
      # https://stackoverflow.com/a/59560731
      shell: "{{ airflow_bin_path }}/airflow db init"
    - name: Create Airflow admin user
      # Don't show password
      #no_log: true
      command:
        argv:
          - "{{ airflow_bin_path }}/airflow"
          - "users"
          - "create"
          - "--username"
          - "airflow"
          - "--password"
          - "{{ lookup('file', '/run/secrets/airflow') }}"
          - "--firstname"
          - "admin"
          - "--lastname"
          - "user"
          - "--role"
          - "Admin"
          - "--email"
          - "airbods@sheffield.ac.uk"
    - name: Install Airflow content
      remote_user: airflow
      copy:
        src: "{{ item }}"
        dest: "{{ airflow_home }}"
      loop:
        - /home/ansible/airflow/dags
        - /home/ansible/airflow/plugins
        - /home/ansible/airflow/tests
        - /home/ansible/airflow/variables.env
    - name: Start systemd services
      systemd:
        name: "airflow-{{ item }}"
        state: restarted
        daemon_reload: true
      loop: "{{ service }}"
...
